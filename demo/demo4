#!/usr/bin/env bash

# Let's include some code

clear
DEMO=demo4

echo Here is a script to insert a fragment of code
echo Start with our sample Pyton script

echo 
cat > ${DEMO}.py <<'EOF'
#!/usr/bin/env python3

import xmlrpc.client

host = "localhost"
port = "8080"
urlEndPoint="http://"+host+":"+port+"/users"

proxy = xmlrpc.client.ServerProxy(urlEndPoint) 

testUser = "alec" # valid test data

try:
    result = proxy.userExists(testUser)
    print("\nCalled userExist() on user {},\nresult {}".format(
        testUser, result))

    result = proxy.getUserAllDetails(testUser)
    print("""Called getUserAllDetails() on user {},
UUID is {},
active status is {}""".format(
        testUser, result["UUID"], result["activeStatus"]))

except xmlrpc.client.Fault as error:
    print("""\nCall to user API failed with xml-rpc fault!
reason {}""".format(
        error.faultString))

except xmlrpc.client.ProtocolError as error:
    print("""\nA protocol error occurred
URL: {}
HTTP/HTTPS headers: {}
Error code: {}
Error message: {}""".format(
        error.url, error.headers, error.errcode, error.errmsg))

except ConnectionError as error:
    print("\nConnection error. Is the server running? {}".format(error))

EOF

echo ----------------------------------
cat ${DEMO}.py
echo ----------------------------------
read -p "Let's extract some code with sed" -n 1

echo "sed -ne '/import xmlrpc.client/,+6p'  ${DEMO}.py"

echo ----------------------------------
sed -ne '/import xmlrpc.client/,+6p'  ${DEMO}.py
echo ----------------------------------

read -p "Now let's insert that into our markup using M4 " -n 1

cat > ${DEMO}.m4  <<'EOF'
m4_changequote([[, ]])
# Demo Doc

Let's include some Python!

Use M4 to insert code with this directive

[[m4_esyscmd([[sed -ne '/import xmlrpc.client/,+6p'  demo4.py]])]]

```python
m4_esyscmd([[sed -ne '/import xmlrpc.client/,+6p'  demo4.py]])
```

A diagram

![A Cool Diagram](demo3.png)

That's it folks
EOF

echo "Just add the m4_esyscmd() directive"
echo ----------------------------------
cat ${DEMO}.m4
echo ----------------------------------

read -p "Press any key" -n 1
echo  So run M4 to create a markdown file

echo 'm4 -P ${DEMO}.m4 > ${DEMO}.pmd'
m4 -P ${DEMO}.m4 > ${DEMO}.pmd

echo ----------------------------------
cat ${DEMO}.pmd
echo ----------------------------------

read -p "Press any key to create a PDF file" -n 1

echo 'pandoc  -V documentclass=article --number-sections --standalone -f markdown+startnum+smart+yaml_metadata_block --filter pandoc-fignos  -o ${DEMO}.pdf ${DEMO}.pmd'
pandoc  -V documentclass=article --number-sections --standalone -f markdown+startnum+smart+yaml_metadata_block --filter pandoc-fignos  -o ${DEMO}.pdf ${DEMO}.pmd

${OPEN} ${DEMO}.pdf

